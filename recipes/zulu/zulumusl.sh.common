: ${rdir:="zulu${rver}-linux_musl_x64"}
: ${rfile:="${rdir}.tar.gz"}
: ${rurl:="https://cdn.azul.com/zulu/bin/${rfile}"}
rreqs="zlib patchelf toybox"
rprof="${cwetcprofd}/zz_zulumusl.sh"
rdlfile="${cwdl}/zulu/${rfile}"

. "${cwrecipe}/common.sh"

cwstubfunc "cwmake_${rname}"
cwstubfunc "cwmakeinstall_${rname}"

eval "
function cwinstall_${rname}_unsupported() {
  cwscriptecho \"${rname} not supported on ${karch}\"
}
"

if [[ ! ${karch} =~ ^(x86_64|aarch64)$ ]] ; then
  eval "function cwinstall_${rname}() { cwinstall_${rname}_unsupported ; }"
fi

eval "
function cwextract_${rname}() {
  cwextract \"${rdlfile}\" \"${rtdir}\"
}
"

eval "
function cwconfigure_${rname}() {
  local l=\"${cwsw}/statictoolchain/current/\$(\${CC} -dumpmachine)/lib/ld.so\"
  local z=\"\$(realpath ${cwsw}/zlib/current/shared/lib/libz.so)\"
  local f
  for f in \$(find ${ridir}/ -type f -exec toybox file {} + | grep ':.*ELF' | cut -f1 -d: | grep -v '\\.so') ; do
    cwscriptecho \"patching \${f}\"
    patchelf --set-interpreter \"\${l}\" \"\${f}\"
  done
  rm -f \"${ridir}/lib/libz.so.1\" \"${ridir}/lib/libz.so\"
  cp -a \"\${z}\" \"${ridir}/lib/libz.so.1\"
  ln -sf \"libz.so.1\" \"${ridir}/lib/libz.so\"
  unset l z f
}
"

eval "
function cwgenprofd_${rname}() {
  local v
  find ${cwetcprofd}/ -type f -name '*zulu*musl*' | xargs rm -f || true
  echo -n > \"${rprof}\"
  echo 'export _JAVA_OPTIONS=\"-Djava.io.tmpdir=${cwtmp} -Djava.awt.headless=true -XX:-UsePerfData\"' >> \"${rprof}\"
  for v in 8 11 17 21 ; do
    echo \"if [ -e ${cwsw}/zulu\${v}musl/current ] ; then prepend_path ${cwsw}/zulu\${v}musl/current/bin ; export JAVA_HOME=${cwsw}/zulu\${v}musl/current ; fi\" >> \"${rprof}\"
  done
}
"

# vim: ft=bash:
